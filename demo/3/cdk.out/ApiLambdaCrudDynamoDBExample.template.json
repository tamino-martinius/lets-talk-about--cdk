{
  "Resources": {
    "API62EA1CFF": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "shyftplan API"
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Resource"
      }
    },
    "APIDeployment0E06874E79a8f8f3ced02514904bcd64c90cacab": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "APIcompanysidDELETEC3B0BDB5",
        "APIcompanysidGET4D0BD60E",
        "APIcompanysidOPTIONS7B171366",
        "APIcompanysidPATCH12DFDF48",
        "APIcompanysid6C9B7A10",
        "APIcompanysGETFFF3FBF9",
        "APIcompanysOPTIONSDCFB9251",
        "APIcompanysPOST2CF707DB",
        "APIcompanysDC2911D7",
        "APIemploymentsidDELETEF9967C71",
        "APIemploymentsidGET1CC6F606",
        "APIemploymentsidOPTIONS8896DBD7",
        "APIemploymentsidPATCHE750CB44",
        "APIemploymentsidC1D187C0",
        "APIemploymentsGET0DB93121",
        "APIemploymentsOPTIONSBC00A527",
        "APIemploymentsPOST1A64AFCE",
        "APIemployments5063CA63",
        "APIshiftsidDELETE41190791",
        "APIshiftsidGET3AAD82F5",
        "APIshiftsidOPTIONSF90C3373",
        "APIshiftsidPATCH373E598A",
        "APIshiftsid4C1FD363",
        "APIshiftsGETADDD78F9",
        "APIshiftsOPTIONS02775CFF",
        "APIshiftsPOST92958661",
        "APIshifts4B0E1F93",
        "APIstaffshiftsidDELETE4E14E2E7",
        "APIstaffshiftsidGET89BF3B38",
        "APIstaffshiftsidOPTIONSFA58DA3C",
        "APIstaffshiftsidPATCHB9005361",
        "APIstaffshiftsid1024E626",
        "APIstaffshiftsGET7E1A565C",
        "APIstaffshiftsOPTIONS6746D4F2",
        "APIstaffshiftsPOST4B810F9B",
        "APIstaffshiftsFC507DB2",
        "APIusersidDELETEB2DADA57",
        "APIusersidGET95754045",
        "APIusersidOPTIONSBBD8B042",
        "APIusersidPATCH6FF1C0E0",
        "APIusersidE941C3BA",
        "APIusersGETAA2EEA3A",
        "APIusersOPTIONS776C10C1",
        "APIusersPOST841F1920",
        "APIusers26ADFAFC"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Deployment/Resource"
      }
    },
    "APIDeploymentStageprod278E75BA": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "DeploymentId": {
          "Ref": "APIDeployment0E06874E79a8f8f3ced02514904bcd64c90cacab"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/DeploymentStage.prod/Resource"
      }
    },
    "APICloudWatchRole927CEB3B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "apigateway.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/CloudWatchRole/Resource"
      }
    },
    "APIAccountD065B313": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "APICloudWatchRole927CEB3B",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "API62EA1CFF"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Account"
      }
    },
    "APIshifts4B0E1F93": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "API62EA1CFF",
            "RootResourceId"
          ]
        },
        "PathPart": "shifts",
        "RestApiId": {
          "Ref": "API62EA1CFF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/shifts/Resource"
      }
    },
    "APIshiftsGETADDD78F9": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "APIshifts4B0E1F93"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getAllItemsFunctionshiftsD231C607",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/shifts/GET/Resource"
      }
    },
    "APIshiftsPOST92958661": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "APIshifts4B0E1F93"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "createOneItemFunctionshifts4EFC4B6F",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/shifts/POST/Resource"
      }
    },
    "APIshiftsOPTIONS02775CFF": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "APIshifts4B0E1F93"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/shifts/OPTIONS/Resource"
      }
    },
    "APIshiftsid4C1FD363": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "APIshifts4B0E1F93"
        },
        "PathPart": "{id}",
        "RestApiId": {
          "Ref": "API62EA1CFF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/shifts/{id}/Resource"
      }
    },
    "APIshiftsidGET3AAD82F5": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "APIshiftsid4C1FD363"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getOneItemFunctionshifts411CFEEB",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/shifts/{id}/GET/Resource"
      }
    },
    "APIshiftsidPATCH373E598A": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PATCH",
        "ResourceId": {
          "Ref": "APIshiftsid4C1FD363"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "updateOneItemFunctionshifts7A8DCD79",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/shifts/{id}/PATCH/Resource"
      }
    },
    "APIshiftsidDELETE41190791": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "ResourceId": {
          "Ref": "APIshiftsid4C1FD363"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "deleteOneItemFunctionshifts7CE54998",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/shifts/{id}/DELETE/Resource"
      }
    },
    "APIshiftsidOPTIONSF90C3373": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "APIshiftsid4C1FD363"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/shifts/{id}/OPTIONS/Resource"
      }
    },
    "APIstaffshiftsFC507DB2": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "API62EA1CFF",
            "RootResourceId"
          ]
        },
        "PathPart": "staff_shifts",
        "RestApiId": {
          "Ref": "API62EA1CFF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/staff_shifts/Resource"
      }
    },
    "APIstaffshiftsGET7E1A565C": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "APIstaffshiftsFC507DB2"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getAllItemsFunctionstaffshiftsEFB2FAF9",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/staff_shifts/GET/Resource"
      }
    },
    "APIstaffshiftsPOST4B810F9B": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "APIstaffshiftsFC507DB2"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "createOneItemFunctionstaffshifts5AAFBDF5",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/staff_shifts/POST/Resource"
      }
    },
    "APIstaffshiftsOPTIONS6746D4F2": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "APIstaffshiftsFC507DB2"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/staff_shifts/OPTIONS/Resource"
      }
    },
    "APIstaffshiftsid1024E626": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "APIstaffshiftsFC507DB2"
        },
        "PathPart": "{id}",
        "RestApiId": {
          "Ref": "API62EA1CFF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/staff_shifts/{id}/Resource"
      }
    },
    "APIstaffshiftsidGET89BF3B38": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "APIstaffshiftsid1024E626"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getOneItemFunctionstaffshiftsCD6366E8",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/staff_shifts/{id}/GET/Resource"
      }
    },
    "APIstaffshiftsidPATCHB9005361": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PATCH",
        "ResourceId": {
          "Ref": "APIstaffshiftsid1024E626"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "updateOneItemFunctionstaffshiftsFC64B9E5",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/staff_shifts/{id}/PATCH/Resource"
      }
    },
    "APIstaffshiftsidDELETE4E14E2E7": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "ResourceId": {
          "Ref": "APIstaffshiftsid1024E626"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "deleteOneItemFunctionstaffshiftsDDD635C7",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/staff_shifts/{id}/DELETE/Resource"
      }
    },
    "APIstaffshiftsidOPTIONSFA58DA3C": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "APIstaffshiftsid1024E626"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/staff_shifts/{id}/OPTIONS/Resource"
      }
    },
    "APIemployments5063CA63": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "API62EA1CFF",
            "RootResourceId"
          ]
        },
        "PathPart": "employments",
        "RestApiId": {
          "Ref": "API62EA1CFF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/employments/Resource"
      }
    },
    "APIemploymentsGET0DB93121": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "APIemployments5063CA63"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getAllItemsFunctionemploymentsB371DD47",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/employments/GET/Resource"
      }
    },
    "APIemploymentsPOST1A64AFCE": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "APIemployments5063CA63"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "createOneItemFunctionemployments42D79CC0",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/employments/POST/Resource"
      }
    },
    "APIemploymentsOPTIONSBC00A527": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "APIemployments5063CA63"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/employments/OPTIONS/Resource"
      }
    },
    "APIemploymentsidC1D187C0": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "APIemployments5063CA63"
        },
        "PathPart": "{id}",
        "RestApiId": {
          "Ref": "API62EA1CFF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/employments/{id}/Resource"
      }
    },
    "APIemploymentsidGET1CC6F606": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "APIemploymentsidC1D187C0"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getOneItemFunctionemploymentsFCE123CA",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/employments/{id}/GET/Resource"
      }
    },
    "APIemploymentsidPATCHE750CB44": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PATCH",
        "ResourceId": {
          "Ref": "APIemploymentsidC1D187C0"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "updateOneItemFunctionemployments785E0F7C",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/employments/{id}/PATCH/Resource"
      }
    },
    "APIemploymentsidDELETEF9967C71": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "ResourceId": {
          "Ref": "APIemploymentsidC1D187C0"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "deleteOneItemFunctionemployments743FE498",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/employments/{id}/DELETE/Resource"
      }
    },
    "APIemploymentsidOPTIONS8896DBD7": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "APIemploymentsidC1D187C0"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/employments/{id}/OPTIONS/Resource"
      }
    },
    "APIcompanysDC2911D7": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "API62EA1CFF",
            "RootResourceId"
          ]
        },
        "PathPart": "companys",
        "RestApiId": {
          "Ref": "API62EA1CFF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/companys/Resource"
      }
    },
    "APIcompanysGETFFF3FBF9": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "APIcompanysDC2911D7"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getAllItemsFunctioncompanysABC236F3",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/companys/GET/Resource"
      }
    },
    "APIcompanysPOST2CF707DB": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "APIcompanysDC2911D7"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "createOneItemFunctioncompanys7EB99906",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/companys/POST/Resource"
      }
    },
    "APIcompanysOPTIONSDCFB9251": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "APIcompanysDC2911D7"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/companys/OPTIONS/Resource"
      }
    },
    "APIcompanysid6C9B7A10": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "APIcompanysDC2911D7"
        },
        "PathPart": "{id}",
        "RestApiId": {
          "Ref": "API62EA1CFF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/companys/{id}/Resource"
      }
    },
    "APIcompanysidGET4D0BD60E": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "APIcompanysid6C9B7A10"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getOneItemFunctioncompanysF7E3593B",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/companys/{id}/GET/Resource"
      }
    },
    "APIcompanysidPATCH12DFDF48": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PATCH",
        "ResourceId": {
          "Ref": "APIcompanysid6C9B7A10"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "updateOneItemFunctioncompanys3D1B9043",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/companys/{id}/PATCH/Resource"
      }
    },
    "APIcompanysidDELETEC3B0BDB5": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "ResourceId": {
          "Ref": "APIcompanysid6C9B7A10"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "deleteOneItemFunctioncompanys3FEB4B93",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/companys/{id}/DELETE/Resource"
      }
    },
    "APIcompanysidOPTIONS7B171366": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "APIcompanysid6C9B7A10"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/companys/{id}/OPTIONS/Resource"
      }
    },
    "APIusers26ADFAFC": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "API62EA1CFF",
            "RootResourceId"
          ]
        },
        "PathPart": "users",
        "RestApiId": {
          "Ref": "API62EA1CFF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/users/Resource"
      }
    },
    "APIusersGETAA2EEA3A": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "APIusers26ADFAFC"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getAllItemsFunctionusers34D30792",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/users/GET/Resource"
      }
    },
    "APIusersPOST841F1920": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "APIusers26ADFAFC"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "createOneItemFunctionusersC6B537EE",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/users/POST/Resource"
      }
    },
    "APIusersOPTIONS776C10C1": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "APIusers26ADFAFC"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/users/OPTIONS/Resource"
      }
    },
    "APIusersidE941C3BA": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "APIusers26ADFAFC"
        },
        "PathPart": "{id}",
        "RestApiId": {
          "Ref": "API62EA1CFF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/users/{id}/Resource"
      }
    },
    "APIusersidGET95754045": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "APIusersidE941C3BA"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getOneItemFunctionusers5AF92165",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/users/{id}/GET/Resource"
      }
    },
    "APIusersidPATCH6FF1C0E0": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PATCH",
        "ResourceId": {
          "Ref": "APIusersidE941C3BA"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "updateOneItemFunctionusersF732DB7C",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/users/{id}/PATCH/Resource"
      }
    },
    "APIusersidDELETEB2DADA57": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "ResourceId": {
          "Ref": "APIusersidE941C3BA"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "deleteOneItemFunctionusers68557CF9",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/users/{id}/DELETE/Resource"
      }
    },
    "APIusersidOPTIONSBBD8B042": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "APIusersidE941C3BA"
        },
        "RestApiId": {
          "Ref": "API62EA1CFF"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/API/Default/users/{id}/OPTIONS/Resource"
      }
    },
    "shifts0987A12A": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "TableName": "shifts"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/shifts/Resource"
      }
    },
    "getOneItemFunctionshiftsServiceRole9C032A7A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctionshifts/ServiceRole/Resource"
      }
    },
    "getOneItemFunctionshiftsServiceRoleDefaultPolicyF57D85BA": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "shifts0987A12A",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getOneItemFunctionshiftsServiceRoleDefaultPolicyF57D85BA",
        "Roles": [
          {
            "Ref": "getOneItemFunctionshiftsServiceRole9C032A7A"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctionshifts/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getOneItemFunctionshifts411CFEEB": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "getOneItemFunctionshiftsCodeS3Bucket94F5047F"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "getOneItemFunctionshiftsCodeS3VersionKeyF5E28D36"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "getOneItemFunctionshiftsCodeS3VersionKeyF5E28D36"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "get-one.handler",
        "Role": {
          "Fn::GetAtt": [
            "getOneItemFunctionshiftsServiceRole9C032A7A",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "shifts0987A12A"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "getOneItemFunctionshiftsServiceRoleDefaultPolicyF57D85BA",
        "getOneItemFunctionshiftsServiceRole9C032A7A"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctionshifts/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "getOneItemFunctionshiftsApiPermissionGETshiftsidFBB292D0": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getOneItemFunctionshifts411CFEEB",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/GET/shifts/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctionshifts/ApiPermission.GET..shifts.{id}"
      }
    },
    "getOneItemFunctionshiftsApiPermissionTestGETshiftsid7E051289": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getOneItemFunctionshifts411CFEEB",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/GET/shifts/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctionshifts/ApiPermission.Test.GET..shifts.{id}"
      }
    },
    "getAllItemsFunctionshiftsServiceRole409B6A07": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctionshifts/ServiceRole/Resource"
      }
    },
    "getAllItemsFunctionshiftsServiceRoleDefaultPolicyE1AB3E4C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "shifts0987A12A",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getAllItemsFunctionshiftsServiceRoleDefaultPolicyE1AB3E4C",
        "Roles": [
          {
            "Ref": "getAllItemsFunctionshiftsServiceRole409B6A07"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctionshifts/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getAllItemsFunctionshiftsD231C607": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "getAllItemsFunctionshiftsCodeS3Bucket6CCA79E1"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "getAllItemsFunctionshiftsCodeS3VersionKey7E4F489D"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "getAllItemsFunctionshiftsCodeS3VersionKey7E4F489D"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "get-all.handler",
        "Role": {
          "Fn::GetAtt": [
            "getAllItemsFunctionshiftsServiceRole409B6A07",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "shifts0987A12A"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "getAllItemsFunctionshiftsServiceRoleDefaultPolicyE1AB3E4C",
        "getAllItemsFunctionshiftsServiceRole409B6A07"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctionshifts/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "getAllItemsFunctionshiftsApiPermissionGETshifts15A21F02": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getAllItemsFunctionshiftsD231C607",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/GET/shifts"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctionshifts/ApiPermission.GET..shifts"
      }
    },
    "getAllItemsFunctionshiftsApiPermissionTestGETshifts8253CD9A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getAllItemsFunctionshiftsD231C607",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/GET/shifts"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctionshifts/ApiPermission.Test.GET..shifts"
      }
    },
    "createOneItemFunctionshiftsServiceRoleAE7F9140": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctionshifts/ServiceRole/Resource"
      }
    },
    "createOneItemFunctionshiftsServiceRoleDefaultPolicyCCA0B92F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "shifts0987A12A",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "createOneItemFunctionshiftsServiceRoleDefaultPolicyCCA0B92F",
        "Roles": [
          {
            "Ref": "createOneItemFunctionshiftsServiceRoleAE7F9140"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctionshifts/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "createOneItemFunctionshifts4EFC4B6F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "createOneItemFunctionshiftsCodeS3BucketEDB85DC6"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "createOneItemFunctionshiftsCodeS3VersionKey1F235C1F"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "createOneItemFunctionshiftsCodeS3VersionKey1F235C1F"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "create.handler",
        "Role": {
          "Fn::GetAtt": [
            "createOneItemFunctionshiftsServiceRoleAE7F9140",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "shifts0987A12A"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "createOneItemFunctionshiftsServiceRoleDefaultPolicyCCA0B92F",
        "createOneItemFunctionshiftsServiceRoleAE7F9140"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctionshifts/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "createOneItemFunctionshiftsApiPermissionPOSTshiftsBA532EBA": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createOneItemFunctionshifts4EFC4B6F",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/POST/shifts"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctionshifts/ApiPermission.POST..shifts"
      }
    },
    "createOneItemFunctionshiftsApiPermissionTestPOSTshifts0F07A766": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createOneItemFunctionshifts4EFC4B6F",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/POST/shifts"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctionshifts/ApiPermission.Test.POST..shifts"
      }
    },
    "updateOneItemFunctionshiftsServiceRoleD8392149": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctionshifts/ServiceRole/Resource"
      }
    },
    "updateOneItemFunctionshiftsServiceRoleDefaultPolicy4A587657": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "shifts0987A12A",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "updateOneItemFunctionshiftsServiceRoleDefaultPolicy4A587657",
        "Roles": [
          {
            "Ref": "updateOneItemFunctionshiftsServiceRoleD8392149"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctionshifts/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "updateOneItemFunctionshifts7A8DCD79": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "updateOneItemFunctionshiftsCodeS3Bucket9EAB9BE1"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "updateOneItemFunctionshiftsCodeS3VersionKey41361001"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "updateOneItemFunctionshiftsCodeS3VersionKey41361001"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "update-one.handler",
        "Role": {
          "Fn::GetAtt": [
            "updateOneItemFunctionshiftsServiceRoleD8392149",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "shifts0987A12A"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "updateOneItemFunctionshiftsServiceRoleDefaultPolicy4A587657",
        "updateOneItemFunctionshiftsServiceRoleD8392149"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctionshifts/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "updateOneItemFunctionshiftsApiPermissionPATCHshiftsidDBDE1DA6": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "updateOneItemFunctionshifts7A8DCD79",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/PATCH/shifts/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctionshifts/ApiPermission.PATCH..shifts.{id}"
      }
    },
    "updateOneItemFunctionshiftsApiPermissionTestPATCHshiftsidB16DFE97": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "updateOneItemFunctionshifts7A8DCD79",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/PATCH/shifts/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctionshifts/ApiPermission.Test.PATCH..shifts.{id}"
      }
    },
    "deleteOneItemFunctionshiftsServiceRole7B5A406F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionshifts/ServiceRole/Resource"
      }
    },
    "deleteOneItemFunctionshiftsServiceRoleDefaultPolicy6D15CA28": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "shifts0987A12A",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "deleteOneItemFunctionshiftsServiceRoleDefaultPolicy6D15CA28",
        "Roles": [
          {
            "Ref": "deleteOneItemFunctionshiftsServiceRole7B5A406F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionshifts/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "deleteOneItemFunctionshifts7CE54998": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "deleteOneItemFunctionshiftsCodeS3BucketF555BF00"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "deleteOneItemFunctionshiftsCodeS3VersionKey788CA7D5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "deleteOneItemFunctionshiftsCodeS3VersionKey788CA7D5"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "delete-one.handler",
        "Role": {
          "Fn::GetAtt": [
            "deleteOneItemFunctionshiftsServiceRole7B5A406F",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "shifts0987A12A"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "deleteOneItemFunctionshiftsServiceRoleDefaultPolicy6D15CA28",
        "deleteOneItemFunctionshiftsServiceRole7B5A406F"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionshifts/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "deleteOneItemFunctionshiftsApiPermissionDELETEshiftsidD869F8FC": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteOneItemFunctionshifts7CE54998",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/DELETE/shifts/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionshifts/ApiPermission.DELETE..shifts.{id}"
      }
    },
    "deleteOneItemFunctionshiftsApiPermissionTestDELETEshiftsidD36DE5C4": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteOneItemFunctionshifts7CE54998",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/DELETE/shifts/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionshifts/ApiPermission.Test.DELETE..shifts.{id}"
      }
    },
    "staffshifts123FEC47": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "TableName": "staff_shifts"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/staff_shifts/Resource"
      }
    },
    "getOneItemFunctionstaffshiftsServiceRoleE5F124CF": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctionstaff_shifts/ServiceRole/Resource"
      }
    },
    "getOneItemFunctionstaffshiftsServiceRoleDefaultPolicyC3CD2B88": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "staffshifts123FEC47",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getOneItemFunctionstaffshiftsServiceRoleDefaultPolicyC3CD2B88",
        "Roles": [
          {
            "Ref": "getOneItemFunctionstaffshiftsServiceRoleE5F124CF"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctionstaff_shifts/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getOneItemFunctionstaffshiftsCD6366E8": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "getOneItemFunctionstaffshiftsCodeS3Bucket9FD0713D"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "getOneItemFunctionstaffshiftsCodeS3VersionKey1FC398BF"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "getOneItemFunctionstaffshiftsCodeS3VersionKey1FC398BF"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "get-one.handler",
        "Role": {
          "Fn::GetAtt": [
            "getOneItemFunctionstaffshiftsServiceRoleE5F124CF",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "staffshifts123FEC47"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "getOneItemFunctionstaffshiftsServiceRoleDefaultPolicyC3CD2B88",
        "getOneItemFunctionstaffshiftsServiceRoleE5F124CF"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctionstaff_shifts/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "getOneItemFunctionstaffshiftsApiPermissionGETstaffshiftsidB9F394C5": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getOneItemFunctionstaffshiftsCD6366E8",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/GET/staff_shifts/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctionstaff_shifts/ApiPermission.GET..staff_shifts.{id}"
      }
    },
    "getOneItemFunctionstaffshiftsApiPermissionTestGETstaffshiftsidC122D913": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getOneItemFunctionstaffshiftsCD6366E8",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/GET/staff_shifts/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctionstaff_shifts/ApiPermission.Test.GET..staff_shifts.{id}"
      }
    },
    "getAllItemsFunctionstaffshiftsServiceRole3D22E378": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctionstaff_shifts/ServiceRole/Resource"
      }
    },
    "getAllItemsFunctionstaffshiftsServiceRoleDefaultPolicyC06F324E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "staffshifts123FEC47",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getAllItemsFunctionstaffshiftsServiceRoleDefaultPolicyC06F324E",
        "Roles": [
          {
            "Ref": "getAllItemsFunctionstaffshiftsServiceRole3D22E378"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctionstaff_shifts/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getAllItemsFunctionstaffshiftsEFB2FAF9": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "getAllItemsFunctionstaffshiftsCodeS3Bucket3D540C4F"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "getAllItemsFunctionstaffshiftsCodeS3VersionKeyA504B715"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "getAllItemsFunctionstaffshiftsCodeS3VersionKeyA504B715"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "get-all.handler",
        "Role": {
          "Fn::GetAtt": [
            "getAllItemsFunctionstaffshiftsServiceRole3D22E378",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "staffshifts123FEC47"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "getAllItemsFunctionstaffshiftsServiceRoleDefaultPolicyC06F324E",
        "getAllItemsFunctionstaffshiftsServiceRole3D22E378"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctionstaff_shifts/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "getAllItemsFunctionstaffshiftsApiPermissionGETstaffshiftsCAD04A9D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getAllItemsFunctionstaffshiftsEFB2FAF9",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/GET/staff_shifts"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctionstaff_shifts/ApiPermission.GET..staff_shifts"
      }
    },
    "getAllItemsFunctionstaffshiftsApiPermissionTestGETstaffshifts7A4E5DD2": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getAllItemsFunctionstaffshiftsEFB2FAF9",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/GET/staff_shifts"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctionstaff_shifts/ApiPermission.Test.GET..staff_shifts"
      }
    },
    "createOneItemFunctionstaffshiftsServiceRole147DA4FA": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctionstaff_shifts/ServiceRole/Resource"
      }
    },
    "createOneItemFunctionstaffshiftsServiceRoleDefaultPolicyFA71844A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "staffshifts123FEC47",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "createOneItemFunctionstaffshiftsServiceRoleDefaultPolicyFA71844A",
        "Roles": [
          {
            "Ref": "createOneItemFunctionstaffshiftsServiceRole147DA4FA"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctionstaff_shifts/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "createOneItemFunctionstaffshifts5AAFBDF5": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "createOneItemFunctionstaffshiftsCodeS3Bucket3A7D0080"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "createOneItemFunctionstaffshiftsCodeS3VersionKeyFC6E3A93"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "createOneItemFunctionstaffshiftsCodeS3VersionKeyFC6E3A93"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "create.handler",
        "Role": {
          "Fn::GetAtt": [
            "createOneItemFunctionstaffshiftsServiceRole147DA4FA",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "staffshifts123FEC47"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "createOneItemFunctionstaffshiftsServiceRoleDefaultPolicyFA71844A",
        "createOneItemFunctionstaffshiftsServiceRole147DA4FA"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctionstaff_shifts/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "createOneItemFunctionstaffshiftsApiPermissionPOSTstaffshifts98EBB027": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createOneItemFunctionstaffshifts5AAFBDF5",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/POST/staff_shifts"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctionstaff_shifts/ApiPermission.POST..staff_shifts"
      }
    },
    "createOneItemFunctionstaffshiftsApiPermissionTestPOSTstaffshiftsC142A3ED": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createOneItemFunctionstaffshifts5AAFBDF5",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/POST/staff_shifts"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctionstaff_shifts/ApiPermission.Test.POST..staff_shifts"
      }
    },
    "updateOneItemFunctionstaffshiftsServiceRole7AA4AFD7": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctionstaff_shifts/ServiceRole/Resource"
      }
    },
    "updateOneItemFunctionstaffshiftsServiceRoleDefaultPolicy46A23C9A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "staffshifts123FEC47",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "updateOneItemFunctionstaffshiftsServiceRoleDefaultPolicy46A23C9A",
        "Roles": [
          {
            "Ref": "updateOneItemFunctionstaffshiftsServiceRole7AA4AFD7"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctionstaff_shifts/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "updateOneItemFunctionstaffshiftsFC64B9E5": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "updateOneItemFunctionstaffshiftsCodeS3BucketACC54486"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "updateOneItemFunctionstaffshiftsCodeS3VersionKey833F2255"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "updateOneItemFunctionstaffshiftsCodeS3VersionKey833F2255"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "update-one.handler",
        "Role": {
          "Fn::GetAtt": [
            "updateOneItemFunctionstaffshiftsServiceRole7AA4AFD7",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "staffshifts123FEC47"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "updateOneItemFunctionstaffshiftsServiceRoleDefaultPolicy46A23C9A",
        "updateOneItemFunctionstaffshiftsServiceRole7AA4AFD7"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctionstaff_shifts/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "updateOneItemFunctionstaffshiftsApiPermissionPATCHstaffshiftsidA25C7D61": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "updateOneItemFunctionstaffshiftsFC64B9E5",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/PATCH/staff_shifts/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctionstaff_shifts/ApiPermission.PATCH..staff_shifts.{id}"
      }
    },
    "updateOneItemFunctionstaffshiftsApiPermissionTestPATCHstaffshiftsid37155CDB": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "updateOneItemFunctionstaffshiftsFC64B9E5",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/PATCH/staff_shifts/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctionstaff_shifts/ApiPermission.Test.PATCH..staff_shifts.{id}"
      }
    },
    "deleteOneItemFunctionstaffshiftsServiceRoleDF281F82": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionstaff_shifts/ServiceRole/Resource"
      }
    },
    "deleteOneItemFunctionstaffshiftsServiceRoleDefaultPolicy42B80091": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "staffshifts123FEC47",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "deleteOneItemFunctionstaffshiftsServiceRoleDefaultPolicy42B80091",
        "Roles": [
          {
            "Ref": "deleteOneItemFunctionstaffshiftsServiceRoleDF281F82"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionstaff_shifts/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "deleteOneItemFunctionstaffshiftsDDD635C7": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "deleteOneItemFunctionstaffshiftsCodeS3Bucket3C8748C3"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "deleteOneItemFunctionstaffshiftsCodeS3VersionKey1639E448"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "deleteOneItemFunctionstaffshiftsCodeS3VersionKey1639E448"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "delete-one.handler",
        "Role": {
          "Fn::GetAtt": [
            "deleteOneItemFunctionstaffshiftsServiceRoleDF281F82",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "staffshifts123FEC47"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "deleteOneItemFunctionstaffshiftsServiceRoleDefaultPolicy42B80091",
        "deleteOneItemFunctionstaffshiftsServiceRoleDF281F82"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionstaff_shifts/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "deleteOneItemFunctionstaffshiftsApiPermissionDELETEstaffshiftsid917E0DF7": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteOneItemFunctionstaffshiftsDDD635C7",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/DELETE/staff_shifts/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionstaff_shifts/ApiPermission.DELETE..staff_shifts.{id}"
      }
    },
    "deleteOneItemFunctionstaffshiftsApiPermissionTestDELETEstaffshiftsid159FC0ED": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteOneItemFunctionstaffshiftsDDD635C7",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/DELETE/staff_shifts/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionstaff_shifts/ApiPermission.Test.DELETE..staff_shifts.{id}"
      }
    },
    "employmentsA91BE4D6": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "TableName": "employments"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/employments/Resource"
      }
    },
    "getOneItemFunctionemploymentsServiceRole761AD3A0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctionemployments/ServiceRole/Resource"
      }
    },
    "getOneItemFunctionemploymentsServiceRoleDefaultPolicyF049ED50": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "employmentsA91BE4D6",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getOneItemFunctionemploymentsServiceRoleDefaultPolicyF049ED50",
        "Roles": [
          {
            "Ref": "getOneItemFunctionemploymentsServiceRole761AD3A0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctionemployments/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getOneItemFunctionemploymentsFCE123CA": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "getOneItemFunctionemploymentsCodeS3Bucket101F0E20"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "getOneItemFunctionemploymentsCodeS3VersionKey692D0BE5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "getOneItemFunctionemploymentsCodeS3VersionKey692D0BE5"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "get-one.handler",
        "Role": {
          "Fn::GetAtt": [
            "getOneItemFunctionemploymentsServiceRole761AD3A0",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "employmentsA91BE4D6"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "getOneItemFunctionemploymentsServiceRoleDefaultPolicyF049ED50",
        "getOneItemFunctionemploymentsServiceRole761AD3A0"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctionemployments/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "getOneItemFunctionemploymentsApiPermissionGETemploymentsidC73EC8C4": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getOneItemFunctionemploymentsFCE123CA",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/GET/employments/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctionemployments/ApiPermission.GET..employments.{id}"
      }
    },
    "getOneItemFunctionemploymentsApiPermissionTestGETemploymentsidE2E15C21": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getOneItemFunctionemploymentsFCE123CA",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/GET/employments/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctionemployments/ApiPermission.Test.GET..employments.{id}"
      }
    },
    "getAllItemsFunctionemploymentsServiceRole7139B036": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctionemployments/ServiceRole/Resource"
      }
    },
    "getAllItemsFunctionemploymentsServiceRoleDefaultPolicy66C0E8DB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "employmentsA91BE4D6",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getAllItemsFunctionemploymentsServiceRoleDefaultPolicy66C0E8DB",
        "Roles": [
          {
            "Ref": "getAllItemsFunctionemploymentsServiceRole7139B036"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctionemployments/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getAllItemsFunctionemploymentsB371DD47": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "getAllItemsFunctionemploymentsCodeS3Bucket60D0E6FD"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "getAllItemsFunctionemploymentsCodeS3VersionKey8A26B3AE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "getAllItemsFunctionemploymentsCodeS3VersionKey8A26B3AE"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "get-all.handler",
        "Role": {
          "Fn::GetAtt": [
            "getAllItemsFunctionemploymentsServiceRole7139B036",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "employmentsA91BE4D6"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "getAllItemsFunctionemploymentsServiceRoleDefaultPolicy66C0E8DB",
        "getAllItemsFunctionemploymentsServiceRole7139B036"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctionemployments/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "getAllItemsFunctionemploymentsApiPermissionGETemploymentsDA2ACDCB": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getAllItemsFunctionemploymentsB371DD47",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/GET/employments"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctionemployments/ApiPermission.GET..employments"
      }
    },
    "getAllItemsFunctionemploymentsApiPermissionTestGETemployments3BB7962B": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getAllItemsFunctionemploymentsB371DD47",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/GET/employments"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctionemployments/ApiPermission.Test.GET..employments"
      }
    },
    "createOneItemFunctionemploymentsServiceRoleA755912C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctionemployments/ServiceRole/Resource"
      }
    },
    "createOneItemFunctionemploymentsServiceRoleDefaultPolicyC21DC55A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "employmentsA91BE4D6",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "createOneItemFunctionemploymentsServiceRoleDefaultPolicyC21DC55A",
        "Roles": [
          {
            "Ref": "createOneItemFunctionemploymentsServiceRoleA755912C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctionemployments/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "createOneItemFunctionemployments42D79CC0": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "createOneItemFunctionemploymentsCodeS3Bucket5FCE7468"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "createOneItemFunctionemploymentsCodeS3VersionKey8C7AEE65"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "createOneItemFunctionemploymentsCodeS3VersionKey8C7AEE65"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "create.handler",
        "Role": {
          "Fn::GetAtt": [
            "createOneItemFunctionemploymentsServiceRoleA755912C",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "employmentsA91BE4D6"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "createOneItemFunctionemploymentsServiceRoleDefaultPolicyC21DC55A",
        "createOneItemFunctionemploymentsServiceRoleA755912C"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctionemployments/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "createOneItemFunctionemploymentsApiPermissionPOSTemployments8902C440": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createOneItemFunctionemployments42D79CC0",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/POST/employments"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctionemployments/ApiPermission.POST..employments"
      }
    },
    "createOneItemFunctionemploymentsApiPermissionTestPOSTemploymentsB28E353A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createOneItemFunctionemployments42D79CC0",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/POST/employments"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctionemployments/ApiPermission.Test.POST..employments"
      }
    },
    "updateOneItemFunctionemploymentsServiceRoleBDACCF41": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctionemployments/ServiceRole/Resource"
      }
    },
    "updateOneItemFunctionemploymentsServiceRoleDefaultPolicyA4846388": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "employmentsA91BE4D6",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "updateOneItemFunctionemploymentsServiceRoleDefaultPolicyA4846388",
        "Roles": [
          {
            "Ref": "updateOneItemFunctionemploymentsServiceRoleBDACCF41"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctionemployments/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "updateOneItemFunctionemployments785E0F7C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "updateOneItemFunctionemploymentsCodeS3BucketC0E61D93"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "updateOneItemFunctionemploymentsCodeS3VersionKey67E249CA"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "updateOneItemFunctionemploymentsCodeS3VersionKey67E249CA"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "update-one.handler",
        "Role": {
          "Fn::GetAtt": [
            "updateOneItemFunctionemploymentsServiceRoleBDACCF41",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "employmentsA91BE4D6"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "updateOneItemFunctionemploymentsServiceRoleDefaultPolicyA4846388",
        "updateOneItemFunctionemploymentsServiceRoleBDACCF41"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctionemployments/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "updateOneItemFunctionemploymentsApiPermissionPATCHemploymentsid9B6EA758": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "updateOneItemFunctionemployments785E0F7C",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/PATCH/employments/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctionemployments/ApiPermission.PATCH..employments.{id}"
      }
    },
    "updateOneItemFunctionemploymentsApiPermissionTestPATCHemploymentsid3CB7830F": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "updateOneItemFunctionemployments785E0F7C",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/PATCH/employments/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctionemployments/ApiPermission.Test.PATCH..employments.{id}"
      }
    },
    "deleteOneItemFunctionemploymentsServiceRoleA755AF90": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionemployments/ServiceRole/Resource"
      }
    },
    "deleteOneItemFunctionemploymentsServiceRoleDefaultPolicy671563D4": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "employmentsA91BE4D6",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "deleteOneItemFunctionemploymentsServiceRoleDefaultPolicy671563D4",
        "Roles": [
          {
            "Ref": "deleteOneItemFunctionemploymentsServiceRoleA755AF90"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionemployments/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "deleteOneItemFunctionemployments743FE498": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "deleteOneItemFunctionemploymentsCodeS3Bucket2F952924"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "deleteOneItemFunctionemploymentsCodeS3VersionKeyEA03C461"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "deleteOneItemFunctionemploymentsCodeS3VersionKeyEA03C461"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "delete-one.handler",
        "Role": {
          "Fn::GetAtt": [
            "deleteOneItemFunctionemploymentsServiceRoleA755AF90",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "employmentsA91BE4D6"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "deleteOneItemFunctionemploymentsServiceRoleDefaultPolicy671563D4",
        "deleteOneItemFunctionemploymentsServiceRoleA755AF90"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionemployments/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "deleteOneItemFunctionemploymentsApiPermissionDELETEemploymentsid2EF1D78B": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteOneItemFunctionemployments743FE498",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/DELETE/employments/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionemployments/ApiPermission.DELETE..employments.{id}"
      }
    },
    "deleteOneItemFunctionemploymentsApiPermissionTestDELETEemploymentsid3FBEBD9B": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteOneItemFunctionemployments743FE498",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/DELETE/employments/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionemployments/ApiPermission.Test.DELETE..employments.{id}"
      }
    },
    "companys05D6307A": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "TableName": "companys"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/companys/Resource"
      }
    },
    "getOneItemFunctioncompanysServiceRole59B5D334": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctioncompanys/ServiceRole/Resource"
      }
    },
    "getOneItemFunctioncompanysServiceRoleDefaultPolicy71BF4224": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "companys05D6307A",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getOneItemFunctioncompanysServiceRoleDefaultPolicy71BF4224",
        "Roles": [
          {
            "Ref": "getOneItemFunctioncompanysServiceRole59B5D334"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctioncompanys/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getOneItemFunctioncompanysF7E3593B": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "getOneItemFunctioncompanysCodeS3BucketE8ED456A"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "getOneItemFunctioncompanysCodeS3VersionKey0C550FF2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "getOneItemFunctioncompanysCodeS3VersionKey0C550FF2"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "get-one.handler",
        "Role": {
          "Fn::GetAtt": [
            "getOneItemFunctioncompanysServiceRole59B5D334",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "companys05D6307A"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "getOneItemFunctioncompanysServiceRoleDefaultPolicy71BF4224",
        "getOneItemFunctioncompanysServiceRole59B5D334"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctioncompanys/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "getOneItemFunctioncompanysApiPermissionGETcompanysid5BBA8DD3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getOneItemFunctioncompanysF7E3593B",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/GET/companys/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctioncompanys/ApiPermission.GET..companys.{id}"
      }
    },
    "getOneItemFunctioncompanysApiPermissionTestGETcompanysid773B718D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getOneItemFunctioncompanysF7E3593B",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/GET/companys/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctioncompanys/ApiPermission.Test.GET..companys.{id}"
      }
    },
    "getAllItemsFunctioncompanysServiceRole71DA9DFE": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctioncompanys/ServiceRole/Resource"
      }
    },
    "getAllItemsFunctioncompanysServiceRoleDefaultPolicyE530B3C3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "companys05D6307A",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getAllItemsFunctioncompanysServiceRoleDefaultPolicyE530B3C3",
        "Roles": [
          {
            "Ref": "getAllItemsFunctioncompanysServiceRole71DA9DFE"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctioncompanys/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getAllItemsFunctioncompanysABC236F3": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "getAllItemsFunctioncompanysCodeS3Bucket900A65B2"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "getAllItemsFunctioncompanysCodeS3VersionKey3599226B"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "getAllItemsFunctioncompanysCodeS3VersionKey3599226B"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "get-all.handler",
        "Role": {
          "Fn::GetAtt": [
            "getAllItemsFunctioncompanysServiceRole71DA9DFE",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "companys05D6307A"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "getAllItemsFunctioncompanysServiceRoleDefaultPolicyE530B3C3",
        "getAllItemsFunctioncompanysServiceRole71DA9DFE"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctioncompanys/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "getAllItemsFunctioncompanysApiPermissionGETcompanys314A42E2": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getAllItemsFunctioncompanysABC236F3",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/GET/companys"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctioncompanys/ApiPermission.GET..companys"
      }
    },
    "getAllItemsFunctioncompanysApiPermissionTestGETcompanysA3C8440D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getAllItemsFunctioncompanysABC236F3",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/GET/companys"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctioncompanys/ApiPermission.Test.GET..companys"
      }
    },
    "createOneItemFunctioncompanysServiceRole13F7C4F0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctioncompanys/ServiceRole/Resource"
      }
    },
    "createOneItemFunctioncompanysServiceRoleDefaultPolicyA433F5BB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "companys05D6307A",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "createOneItemFunctioncompanysServiceRoleDefaultPolicyA433F5BB",
        "Roles": [
          {
            "Ref": "createOneItemFunctioncompanysServiceRole13F7C4F0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctioncompanys/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "createOneItemFunctioncompanys7EB99906": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "createOneItemFunctioncompanysCodeS3BucketF8486364"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "createOneItemFunctioncompanysCodeS3VersionKeyA81BDC27"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "createOneItemFunctioncompanysCodeS3VersionKeyA81BDC27"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "create.handler",
        "Role": {
          "Fn::GetAtt": [
            "createOneItemFunctioncompanysServiceRole13F7C4F0",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "companys05D6307A"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "createOneItemFunctioncompanysServiceRoleDefaultPolicyA433F5BB",
        "createOneItemFunctioncompanysServiceRole13F7C4F0"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctioncompanys/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "createOneItemFunctioncompanysApiPermissionPOSTcompanysF833C85E": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createOneItemFunctioncompanys7EB99906",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/POST/companys"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctioncompanys/ApiPermission.POST..companys"
      }
    },
    "createOneItemFunctioncompanysApiPermissionTestPOSTcompanysAF65D236": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createOneItemFunctioncompanys7EB99906",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/POST/companys"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctioncompanys/ApiPermission.Test.POST..companys"
      }
    },
    "updateOneItemFunctioncompanysServiceRoleB5EBFEB1": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctioncompanys/ServiceRole/Resource"
      }
    },
    "updateOneItemFunctioncompanysServiceRoleDefaultPolicy9E0FBE72": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "companys05D6307A",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "updateOneItemFunctioncompanysServiceRoleDefaultPolicy9E0FBE72",
        "Roles": [
          {
            "Ref": "updateOneItemFunctioncompanysServiceRoleB5EBFEB1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctioncompanys/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "updateOneItemFunctioncompanys3D1B9043": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "updateOneItemFunctioncompanysCodeS3Bucket032AA62F"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "updateOneItemFunctioncompanysCodeS3VersionKeyA016EE60"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "updateOneItemFunctioncompanysCodeS3VersionKeyA016EE60"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "update-one.handler",
        "Role": {
          "Fn::GetAtt": [
            "updateOneItemFunctioncompanysServiceRoleB5EBFEB1",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "companys05D6307A"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "updateOneItemFunctioncompanysServiceRoleDefaultPolicy9E0FBE72",
        "updateOneItemFunctioncompanysServiceRoleB5EBFEB1"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctioncompanys/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "updateOneItemFunctioncompanysApiPermissionPATCHcompanysid68F65FB9": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "updateOneItemFunctioncompanys3D1B9043",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/PATCH/companys/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctioncompanys/ApiPermission.PATCH..companys.{id}"
      }
    },
    "updateOneItemFunctioncompanysApiPermissionTestPATCHcompanysid3FB29E22": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "updateOneItemFunctioncompanys3D1B9043",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/PATCH/companys/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctioncompanys/ApiPermission.Test.PATCH..companys.{id}"
      }
    },
    "deleteOneItemFunctioncompanysServiceRole66ED6326": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctioncompanys/ServiceRole/Resource"
      }
    },
    "deleteOneItemFunctioncompanysServiceRoleDefaultPolicy6FE3650B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "companys05D6307A",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "deleteOneItemFunctioncompanysServiceRoleDefaultPolicy6FE3650B",
        "Roles": [
          {
            "Ref": "deleteOneItemFunctioncompanysServiceRole66ED6326"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctioncompanys/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "deleteOneItemFunctioncompanys3FEB4B93": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "deleteOneItemFunctioncompanysCodeS3Bucket35AA7BC0"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "deleteOneItemFunctioncompanysCodeS3VersionKey1BE53E00"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "deleteOneItemFunctioncompanysCodeS3VersionKey1BE53E00"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "delete-one.handler",
        "Role": {
          "Fn::GetAtt": [
            "deleteOneItemFunctioncompanysServiceRole66ED6326",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "companys05D6307A"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "deleteOneItemFunctioncompanysServiceRoleDefaultPolicy6FE3650B",
        "deleteOneItemFunctioncompanysServiceRole66ED6326"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctioncompanys/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "deleteOneItemFunctioncompanysApiPermissionDELETEcompanysid31BFEE6A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteOneItemFunctioncompanys3FEB4B93",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/DELETE/companys/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctioncompanys/ApiPermission.DELETE..companys.{id}"
      }
    },
    "deleteOneItemFunctioncompanysApiPermissionTestDELETEcompanysid15F67677": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteOneItemFunctioncompanys3FEB4B93",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/DELETE/companys/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctioncompanys/ApiPermission.Test.DELETE..companys.{id}"
      }
    },
    "users9E3E6EF7": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "TableName": "users"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/users/Resource"
      }
    },
    "getOneItemFunctionusersServiceRole816F5359": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctionusers/ServiceRole/Resource"
      }
    },
    "getOneItemFunctionusersServiceRoleDefaultPolicy3416DA86": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "users9E3E6EF7",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getOneItemFunctionusersServiceRoleDefaultPolicy3416DA86",
        "Roles": [
          {
            "Ref": "getOneItemFunctionusersServiceRole816F5359"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctionusers/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getOneItemFunctionusers5AF92165": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "getOneItemFunctionusersCodeS3BucketD4E16FB3"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "getOneItemFunctionusersCodeS3VersionKeyE49A6B9B"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "getOneItemFunctionusersCodeS3VersionKeyE49A6B9B"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "get-one.handler",
        "Role": {
          "Fn::GetAtt": [
            "getOneItemFunctionusersServiceRole816F5359",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "users9E3E6EF7"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "getOneItemFunctionusersServiceRoleDefaultPolicy3416DA86",
        "getOneItemFunctionusersServiceRole816F5359"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctionusers/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "getOneItemFunctionusersApiPermissionGETusersid844717E3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getOneItemFunctionusers5AF92165",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/GET/users/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctionusers/ApiPermission.GET..users.{id}"
      }
    },
    "getOneItemFunctionusersApiPermissionTestGETusersid22DE6692": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getOneItemFunctionusers5AF92165",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/GET/users/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getOneItemFunctionusers/ApiPermission.Test.GET..users.{id}"
      }
    },
    "getAllItemsFunctionusersServiceRole8CE41D1A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctionusers/ServiceRole/Resource"
      }
    },
    "getAllItemsFunctionusersServiceRoleDefaultPolicy841EB479": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "users9E3E6EF7",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getAllItemsFunctionusersServiceRoleDefaultPolicy841EB479",
        "Roles": [
          {
            "Ref": "getAllItemsFunctionusersServiceRole8CE41D1A"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctionusers/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getAllItemsFunctionusers34D30792": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "getAllItemsFunctionusersCodeS3Bucket0D5F932D"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "getAllItemsFunctionusersCodeS3VersionKeyB59489E7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "getAllItemsFunctionusersCodeS3VersionKeyB59489E7"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "get-all.handler",
        "Role": {
          "Fn::GetAtt": [
            "getAllItemsFunctionusersServiceRole8CE41D1A",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "users9E3E6EF7"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "getAllItemsFunctionusersServiceRoleDefaultPolicy841EB479",
        "getAllItemsFunctionusersServiceRole8CE41D1A"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctionusers/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "getAllItemsFunctionusersApiPermissionGETusers6EEBC1AE": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getAllItemsFunctionusers34D30792",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/GET/users"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctionusers/ApiPermission.GET..users"
      }
    },
    "getAllItemsFunctionusersApiPermissionTestGETusers6D0ED94D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getAllItemsFunctionusers34D30792",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/GET/users"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/getAllItemsFunctionusers/ApiPermission.Test.GET..users"
      }
    },
    "createOneItemFunctionusersServiceRoleAB152732": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctionusers/ServiceRole/Resource"
      }
    },
    "createOneItemFunctionusersServiceRoleDefaultPolicyE2E71734": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "users9E3E6EF7",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "createOneItemFunctionusersServiceRoleDefaultPolicyE2E71734",
        "Roles": [
          {
            "Ref": "createOneItemFunctionusersServiceRoleAB152732"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctionusers/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "createOneItemFunctionusersC6B537EE": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "createOneItemFunctionusersCodeS3Bucket0D174557"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "createOneItemFunctionusersCodeS3VersionKey0B796A91"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "createOneItemFunctionusersCodeS3VersionKey0B796A91"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "create.handler",
        "Role": {
          "Fn::GetAtt": [
            "createOneItemFunctionusersServiceRoleAB152732",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "users9E3E6EF7"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "createOneItemFunctionusersServiceRoleDefaultPolicyE2E71734",
        "createOneItemFunctionusersServiceRoleAB152732"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctionusers/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "createOneItemFunctionusersApiPermissionPOSTusers45274029": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createOneItemFunctionusersC6B537EE",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/POST/users"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctionusers/ApiPermission.POST..users"
      }
    },
    "createOneItemFunctionusersApiPermissionTestPOSTusers718996E7": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createOneItemFunctionusersC6B537EE",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/POST/users"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/createOneItemFunctionusers/ApiPermission.Test.POST..users"
      }
    },
    "updateOneItemFunctionusersServiceRole0917C0A5": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctionusers/ServiceRole/Resource"
      }
    },
    "updateOneItemFunctionusersServiceRoleDefaultPolicyA453CDAE": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "users9E3E6EF7",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "updateOneItemFunctionusersServiceRoleDefaultPolicyA453CDAE",
        "Roles": [
          {
            "Ref": "updateOneItemFunctionusersServiceRole0917C0A5"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctionusers/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "updateOneItemFunctionusersF732DB7C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "updateOneItemFunctionusersCodeS3BucketC506104C"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "updateOneItemFunctionusersCodeS3VersionKeyF5C82E4D"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "updateOneItemFunctionusersCodeS3VersionKeyF5C82E4D"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "update-one.handler",
        "Role": {
          "Fn::GetAtt": [
            "updateOneItemFunctionusersServiceRole0917C0A5",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "users9E3E6EF7"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "updateOneItemFunctionusersServiceRoleDefaultPolicyA453CDAE",
        "updateOneItemFunctionusersServiceRole0917C0A5"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctionusers/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "updateOneItemFunctionusersApiPermissionPATCHusersid8208F805": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "updateOneItemFunctionusersF732DB7C",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/PATCH/users/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctionusers/ApiPermission.PATCH..users.{id}"
      }
    },
    "updateOneItemFunctionusersApiPermissionTestPATCHusersid12CF4A21": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "updateOneItemFunctionusersF732DB7C",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/PATCH/users/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/updateOneItemFunctionusers/ApiPermission.Test.PATCH..users.{id}"
      }
    },
    "deleteOneItemFunctionusersServiceRole888F39D3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionusers/ServiceRole/Resource"
      }
    },
    "deleteOneItemFunctionusersServiceRoleDefaultPolicy475060D2": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "users9E3E6EF7",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "deleteOneItemFunctionusersServiceRoleDefaultPolicy475060D2",
        "Roles": [
          {
            "Ref": "deleteOneItemFunctionusersServiceRole888F39D3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionusers/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "deleteOneItemFunctionusers68557CF9": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "deleteOneItemFunctionusersCodeS3BucketCEDD2014"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "deleteOneItemFunctionusersCodeS3VersionKeyB6702F76"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "deleteOneItemFunctionusersCodeS3VersionKeyB6702F76"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "delete-one.handler",
        "Role": {
          "Fn::GetAtt": [
            "deleteOneItemFunctionusersServiceRole888F39D3",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "users9E3E6EF7"
            },
            "PRIMARY_KEY": "id"
          }
        }
      },
      "DependsOn": [
        "deleteOneItemFunctionusersServiceRoleDefaultPolicy475060D2",
        "deleteOneItemFunctionusersServiceRole888F39D3"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionusers/Resource",
        "aws:asset:path": "asset.4ad4d1968038ce5925c1e9b4751f454dd74f5a477abcc80e96ec8291af6262ec",
        "aws:asset:property": "Code"
      }
    },
    "deleteOneItemFunctionusersApiPermissionDELETEusersidCEF7E7A6": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteOneItemFunctionusers68557CF9",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/",
              {
                "Ref": "APIDeploymentStageprod278E75BA"
              },
              "/DELETE/users/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionusers/ApiPermission.DELETE..users.{id}"
      }
    },
    "deleteOneItemFunctionusersApiPermissionTestDELETEusersid06A737C5": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteOneItemFunctionusers68557CF9",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "API62EA1CFF"
              },
              "/test-invoke-stage/DELETE/users/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionusers/ApiPermission.Test.DELETE..users.{id}"
      }
    }
  },
  "Outputs": {
    "APIEndpoint1793E782": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "API62EA1CFF"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "APIDeploymentStageprod278E75BA"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Parameters": {
    "getOneItemFunctionshiftsCodeS3Bucket94F5047F": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/getOneItemFunctionshifts/Code\""
    },
    "getOneItemFunctionshiftsCodeS3VersionKeyF5E28D36": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/getOneItemFunctionshifts/Code\""
    },
    "getOneItemFunctionshiftsCodeArtifactHash517481A5": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/getOneItemFunctionshifts/Code\""
    },
    "getAllItemsFunctionshiftsCodeS3Bucket6CCA79E1": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/getAllItemsFunctionshifts/Code\""
    },
    "getAllItemsFunctionshiftsCodeS3VersionKey7E4F489D": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/getAllItemsFunctionshifts/Code\""
    },
    "getAllItemsFunctionshiftsCodeArtifactHash4BF35F4B": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/getAllItemsFunctionshifts/Code\""
    },
    "createOneItemFunctionshiftsCodeS3BucketEDB85DC6": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/createOneItemFunctionshifts/Code\""
    },
    "createOneItemFunctionshiftsCodeS3VersionKey1F235C1F": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/createOneItemFunctionshifts/Code\""
    },
    "createOneItemFunctionshiftsCodeArtifactHash09C08CA6": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/createOneItemFunctionshifts/Code\""
    },
    "updateOneItemFunctionshiftsCodeS3Bucket9EAB9BE1": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/updateOneItemFunctionshifts/Code\""
    },
    "updateOneItemFunctionshiftsCodeS3VersionKey41361001": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/updateOneItemFunctionshifts/Code\""
    },
    "updateOneItemFunctionshiftsCodeArtifactHash4BD8C4FF": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/updateOneItemFunctionshifts/Code\""
    },
    "deleteOneItemFunctionshiftsCodeS3BucketF555BF00": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionshifts/Code\""
    },
    "deleteOneItemFunctionshiftsCodeS3VersionKey788CA7D5": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionshifts/Code\""
    },
    "deleteOneItemFunctionshiftsCodeArtifactHash450D1214": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionshifts/Code\""
    },
    "getOneItemFunctionstaffshiftsCodeS3Bucket9FD0713D": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/getOneItemFunctionstaff_shifts/Code\""
    },
    "getOneItemFunctionstaffshiftsCodeS3VersionKey1FC398BF": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/getOneItemFunctionstaff_shifts/Code\""
    },
    "getOneItemFunctionstaffshiftsCodeArtifactHash6B8615B6": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/getOneItemFunctionstaff_shifts/Code\""
    },
    "getAllItemsFunctionstaffshiftsCodeS3Bucket3D540C4F": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/getAllItemsFunctionstaff_shifts/Code\""
    },
    "getAllItemsFunctionstaffshiftsCodeS3VersionKeyA504B715": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/getAllItemsFunctionstaff_shifts/Code\""
    },
    "getAllItemsFunctionstaffshiftsCodeArtifactHash36DF280C": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/getAllItemsFunctionstaff_shifts/Code\""
    },
    "createOneItemFunctionstaffshiftsCodeS3Bucket3A7D0080": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/createOneItemFunctionstaff_shifts/Code\""
    },
    "createOneItemFunctionstaffshiftsCodeS3VersionKeyFC6E3A93": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/createOneItemFunctionstaff_shifts/Code\""
    },
    "createOneItemFunctionstaffshiftsCodeArtifactHash1F252B05": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/createOneItemFunctionstaff_shifts/Code\""
    },
    "updateOneItemFunctionstaffshiftsCodeS3BucketACC54486": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/updateOneItemFunctionstaff_shifts/Code\""
    },
    "updateOneItemFunctionstaffshiftsCodeS3VersionKey833F2255": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/updateOneItemFunctionstaff_shifts/Code\""
    },
    "updateOneItemFunctionstaffshiftsCodeArtifactHash1B9010FF": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/updateOneItemFunctionstaff_shifts/Code\""
    },
    "deleteOneItemFunctionstaffshiftsCodeS3Bucket3C8748C3": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionstaff_shifts/Code\""
    },
    "deleteOneItemFunctionstaffshiftsCodeS3VersionKey1639E448": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionstaff_shifts/Code\""
    },
    "deleteOneItemFunctionstaffshiftsCodeArtifactHash33CC1145": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionstaff_shifts/Code\""
    },
    "getOneItemFunctionemploymentsCodeS3Bucket101F0E20": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/getOneItemFunctionemployments/Code\""
    },
    "getOneItemFunctionemploymentsCodeS3VersionKey692D0BE5": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/getOneItemFunctionemployments/Code\""
    },
    "getOneItemFunctionemploymentsCodeArtifactHash418D464D": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/getOneItemFunctionemployments/Code\""
    },
    "getAllItemsFunctionemploymentsCodeS3Bucket60D0E6FD": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/getAllItemsFunctionemployments/Code\""
    },
    "getAllItemsFunctionemploymentsCodeS3VersionKey8A26B3AE": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/getAllItemsFunctionemployments/Code\""
    },
    "getAllItemsFunctionemploymentsCodeArtifactHashBD339FFB": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/getAllItemsFunctionemployments/Code\""
    },
    "createOneItemFunctionemploymentsCodeS3Bucket5FCE7468": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/createOneItemFunctionemployments/Code\""
    },
    "createOneItemFunctionemploymentsCodeS3VersionKey8C7AEE65": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/createOneItemFunctionemployments/Code\""
    },
    "createOneItemFunctionemploymentsCodeArtifactHash427D8B97": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/createOneItemFunctionemployments/Code\""
    },
    "updateOneItemFunctionemploymentsCodeS3BucketC0E61D93": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/updateOneItemFunctionemployments/Code\""
    },
    "updateOneItemFunctionemploymentsCodeS3VersionKey67E249CA": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/updateOneItemFunctionemployments/Code\""
    },
    "updateOneItemFunctionemploymentsCodeArtifactHashEE6D0A12": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/updateOneItemFunctionemployments/Code\""
    },
    "deleteOneItemFunctionemploymentsCodeS3Bucket2F952924": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionemployments/Code\""
    },
    "deleteOneItemFunctionemploymentsCodeS3VersionKeyEA03C461": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionemployments/Code\""
    },
    "deleteOneItemFunctionemploymentsCodeArtifactHashCAA09B38": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionemployments/Code\""
    },
    "getOneItemFunctioncompanysCodeS3BucketE8ED456A": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/getOneItemFunctioncompanys/Code\""
    },
    "getOneItemFunctioncompanysCodeS3VersionKey0C550FF2": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/getOneItemFunctioncompanys/Code\""
    },
    "getOneItemFunctioncompanysCodeArtifactHashE1B4CAF7": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/getOneItemFunctioncompanys/Code\""
    },
    "getAllItemsFunctioncompanysCodeS3Bucket900A65B2": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/getAllItemsFunctioncompanys/Code\""
    },
    "getAllItemsFunctioncompanysCodeS3VersionKey3599226B": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/getAllItemsFunctioncompanys/Code\""
    },
    "getAllItemsFunctioncompanysCodeArtifactHash60111237": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/getAllItemsFunctioncompanys/Code\""
    },
    "createOneItemFunctioncompanysCodeS3BucketF8486364": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/createOneItemFunctioncompanys/Code\""
    },
    "createOneItemFunctioncompanysCodeS3VersionKeyA81BDC27": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/createOneItemFunctioncompanys/Code\""
    },
    "createOneItemFunctioncompanysCodeArtifactHash64E89EB8": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/createOneItemFunctioncompanys/Code\""
    },
    "updateOneItemFunctioncompanysCodeS3Bucket032AA62F": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/updateOneItemFunctioncompanys/Code\""
    },
    "updateOneItemFunctioncompanysCodeS3VersionKeyA016EE60": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/updateOneItemFunctioncompanys/Code\""
    },
    "updateOneItemFunctioncompanysCodeArtifactHashD020DAC1": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/updateOneItemFunctioncompanys/Code\""
    },
    "deleteOneItemFunctioncompanysCodeS3Bucket35AA7BC0": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/deleteOneItemFunctioncompanys/Code\""
    },
    "deleteOneItemFunctioncompanysCodeS3VersionKey1BE53E00": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/deleteOneItemFunctioncompanys/Code\""
    },
    "deleteOneItemFunctioncompanysCodeArtifactHashCE3023C7": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/deleteOneItemFunctioncompanys/Code\""
    },
    "getOneItemFunctionusersCodeS3BucketD4E16FB3": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/getOneItemFunctionusers/Code\""
    },
    "getOneItemFunctionusersCodeS3VersionKeyE49A6B9B": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/getOneItemFunctionusers/Code\""
    },
    "getOneItemFunctionusersCodeArtifactHash381F7B8D": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/getOneItemFunctionusers/Code\""
    },
    "getAllItemsFunctionusersCodeS3Bucket0D5F932D": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/getAllItemsFunctionusers/Code\""
    },
    "getAllItemsFunctionusersCodeS3VersionKeyB59489E7": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/getAllItemsFunctionusers/Code\""
    },
    "getAllItemsFunctionusersCodeArtifactHash65EF1EF2": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/getAllItemsFunctionusers/Code\""
    },
    "createOneItemFunctionusersCodeS3Bucket0D174557": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/createOneItemFunctionusers/Code\""
    },
    "createOneItemFunctionusersCodeS3VersionKey0B796A91": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/createOneItemFunctionusers/Code\""
    },
    "createOneItemFunctionusersCodeArtifactHash679CEFAF": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/createOneItemFunctionusers/Code\""
    },
    "updateOneItemFunctionusersCodeS3BucketC506104C": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/updateOneItemFunctionusers/Code\""
    },
    "updateOneItemFunctionusersCodeS3VersionKeyF5C82E4D": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/updateOneItemFunctionusers/Code\""
    },
    "updateOneItemFunctionusersCodeArtifactHash32C9A7D4": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/updateOneItemFunctionusers/Code\""
    },
    "deleteOneItemFunctionusersCodeS3BucketCEDD2014": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionusers/Code\""
    },
    "deleteOneItemFunctionusersCodeS3VersionKeyB6702F76": {
      "Type": "String",
      "Description": "S3 key for asset version \"ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionusers/Code\""
    },
    "deleteOneItemFunctionusersCodeArtifactHashEEED49D2": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ApiLambdaCrudDynamoDBExample/deleteOneItemFunctionusers/Code\""
    }
  }
}